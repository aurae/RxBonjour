apply plugin: "com.android.library"
apply plugin: "maven"
apply plugin: "maven-publish"
apply plugin: "com.jfrog.bintray"

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION
        targetSdkVersion TARGET_SDK_VERSION
        versionName VERSION_NAME
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // @formatter:off
    api "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"          // Support annotations
    api "io.reactivex:rxjava:$RXJAVA_VERSION"                                       // Reactive extensions
    api "io.reactivex:rxandroid:$RXANDROID_VERSION"                                 // Reactive extensions
    implementation "org.jmdns:jmdns:$JMDNS_JAR_VERSION"                             // Network Service Discovery (pre-JB)

    testImplementation "junit:junit:$JUNIT_VERSION"                                 // Unit Testing
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"                  // Mocking Framework
    testImplementation "org.powermock:powermock-api-mockito:$POWERMOCK_VERSION"     // Mocking Framework extensions
    testImplementation "org.powermock:powermock-module-junit4:$POWERMOCK_VERSION"   // Mocking Framework extensions
    // @formatter:on
}

// ------------------------------------------------------------------------------------------------
// Deployment Setup
// ------------------------------------------------------------------------------------------------

// Include sources.jar archive in each release
task sourcesJar(type: Jar) {
    classifier = "sources"
    from android.sourceSets.main.java.srcDirs
}

// Include javadoc.jar archive in each release
task androidJavadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar) {
    classifier = "javadoc"
    from androidJavadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

version = VERSION_NAME

publishing {
    publications {
        library(MavenPublication) {
            artifact "$buildDir/outputs/aar/rxbonjour-release.aar"
            artifact sourcesJar
            artifact javadocJar
            groupId GROUP_ID
            artifactId ARTIFACT_ID
            version VERSION_NAME
            pom.withXml {
                def root = asNode()
                root.appendNode("description", DESCRIPTION)
                root.appendNode("name", ARTIFACT_ID)
                root.appendNode("url", VCS_URL)
            }
        }
    }
}

// Copy POM to location expected by Bintray
task copyPom(type: Copy) {
    from "build/publications/library"
    into "build/poms"
    include "pom-default.xml"
}

publish.dependsOn copyPom

bintray {
    user = project.ext.bintrayUser
    key = project.ext.bintrayKey
    configurations = ["archives"]
    dryRun = false
    pkg {
        repo = "maven"
        name = ARTIFACT_ID
        userOrg = project.ext.bintrayUser
        licenses = [LICENCE_NAME]
        publish = true
        publicDownloadNumbers = true
        vcsUrl = VCS_URL
        version {
            name = VERSION_NAME
            desc = DESCRIPTION
        }
    }
}
